var searchDocuments = {"references/eClassifiers/Function/index.html":{"action-uuid":"cdbbb040-cb3f-4c46-8247-8abf511dfe91","title":"Function","content":"Function takes input and produces output as a result."},"references/eClassifiers/SourceFunction/inheritance.html":{"path":"Source Function/Inheritance","action-uuid":"16d0ad26-5c03-4968-9c7c-ae58bb63c2db","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/Consumer/index.html":{"action-uuid":"df4012a9-4b21-477d-ad20-e649ac0c3dbe","title":"Consumer","content":"Consumer processes inputs without producing outputs."},"references/eClassifiers/Supplier/references/eStructuralFeatures/output/index.html":{"path":"Supplier/Attributes/output","action-uuid":"a2bf7fff-c061-4c46-8600-d862be638d9e","title":"output","content":"Output type"},"references/eClassifiers/SourceSupplier/inheritance.html":{"path":"Source Supplier/Inheritance","action-uuid":"5f6b326a-da48-477a-8774-deda38521780","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/SourceTransition/index.html":{"action-uuid":"fbbbe8c2-a101-465b-a1b4-82b262ea7ec3","title":"Source Transition","content":"Source transition executes its source to transform input to output."},"references/eClassifiers/FlowElement/references/eStructuralFeatures/implementation/index.html":{"path":"Flow Element/Attributes/implementation","action-uuid":"0333791f-8914-440c-b343-85c07d7c2dbf","title":"implementation","content":"Meaning of implementation is generator/interpreter-specific. For example, for a Java generator it may be a fully qualified class name or a logical name which maps to a fully qualified class name. It may also be an expression returning the implementation, say constructor invocation."},"references/eClassifiers/SourceTransition/inheritance.html":{"path":"Source Transition/Inheritance","action-uuid":"55436562-7465-4c94-9510-fd68949fc901","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/SupplierFlow/index.html":{"action-uuid":"3e396b35-6080-41ca-8351-6923e86a825c","title":"Supplier Flow","content":"Supplier flow is a composite supplier."},"index.html":{"action-uuid":"b959e53f-b00a-4f5c-bf4e-8383778740bd","title":"Function Flow","content":"TODO - demo diagram with all types of objects, description."},"references/eClassifiers/SourceFunction/index.html":{"action-uuid":"21b4393b-ea87-4128-a476-7046099b429c","title":"Source Function","content":"Source function executes its source code to create output from input."},"references/eClassifiers/Start/inheritance.html":{"path":"Start/Inheritance","action-uuid":"e3d6d7b5-8714-4fed-a629-3927124a0bb6","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/ErrorHandler/inheritance.html":{"path":"Error Handler/Inheritance","action-uuid":"86102073-5c50-44ea-a3e9-e8c510f80d51","title":"Inheritance","content":"Supertypes Subtypes  "},"references/eClassifiers/Function/inheritance.html":{"path":"Function/Inheritance","action-uuid":"6bf4a6dd-9ee3-43c1-966f-52f94a441edd","title":"Inheritance","content":"Supertypes Subtypes  "},"references/eClassifiers/ErrorTransition/index.html":{"action-uuid":"9459ed6d-7ab0-4eee-a6a1-394f662a9c35","title":"Error Transition","content":"Error transitions are activated by errors thrown by the source. If a flow element throws an error, outgoing error transitions are sorted by order, within the order they are sorted by error specificity if it is supported. Error transitions with conditions are matched before error transitions without conditions. The first transition to match error type and condition (if it is present) is activated."},"references/eClassifiers/SupplierFlow/inheritance.html":{"path":"Supplier Flow/Inheritance","action-uuid":"7d7ff8ad-1a82-4f67-ba84-4a2d5d832396","title":"Inheritance","content":"Supertypes Subtypes  "},"references/eClassifiers/Flow/index.html":{"action-uuid":"60adfaf8-78d8-4273-bacb-faa53d448304","title":"Flow","content":"Flow is a container for flow elements connected by transitions. It is a base class for other flow types - Supplier Flow, Consumer Flow, and Function Flow. Flow does not take inputs and does not produce outputs. As such it does not support Start and End - it is an element graph consisting of Suppliers, Functions, Consumers, and Error Handlers"},"references/eClassifiers/Consumer/references/eStructuralFeatures/input/index.html":{"path":"Consumer/Attributes/input","action-uuid":"cb5c087f-31c6-4f93-bd17-a134b74f0ad8","title":"input","content":"Output type"},"references/eClassifiers/Source/index.html":{"action-uuid":"d1dd816c-aa81-4f86-b807-2a15e193bf11","title":"Source","content":"Source is a base class for flow elements which execute source code. The meaning of source is implementation/generator specific. For a Java generation target it might be Java code and for a JavaScript generation target it might be JavaScript. However, depending on the implementation it might be some scripting language supported by Java scripting. It may also be a template which generates actual source code. E.g. Apache FreeMarker."},"references/eClassifiers/SourceConsumer/inheritance.html":{"path":"Source Consumer/Inheritance","action-uuid":"b6603116-3939-4cc3-b711-636627c637e8","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/Start/index.html":{"action-uuid":"312149ba-8cd1-4b1d-b178-bb283d983e53","title":"Start","content":"Start passes containing Consumer/Function flow input to its outgoing transitions. A flow may have multiple starts. If there is more than one start then starts are sorted by order. Within the order value starts are sorted by output specificity if it is supported. Starts with conditions are matched before starts witout condition."},"references/eClassifiers/SourceErrorTransition/inheritance.html":{"path":"Source Error Transition/Inheritance","action-uuid":"4c76413a-7528-4640-9bf5-79ec8bfb947f","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/FunctionFlow/inheritance.html":{"path":"Function Flow/Inheritance","action-uuid":"3ab6dbbd-3383-49fe-965f-a1ab56ced308","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/FlowElement/references/eStructuralFeatures/errors/index.html":{"path":"Flow Element/Attributes/errors","action-uuid":"dba0fa5f-e12f-4908-bb76-97c4a2b0c6c6","title":"errors","content":"A list of errors which has different semantics for different element types: For Error Handler the error list defines errors which the handler handles. For Error Transition the error list defines errors activate the transition. For all other elements defines errors which the element throws. Java analogy: Error handler and transition - exception type in catch clause All other elements - exception types in throws clause"},"references/eClassifiers/Transition/inheritance.html":{"path":"Transition/Inheritance","action-uuid":"09ecfca9-8f27-4df1-b386-bc82949a2b94","title":"Inheritance","content":"Supertypes Subtypes  "},"references/eClassifiers/End/inheritance.html":{"path":"End/Inheritance","action-uuid":"c73ff314-6a4c-4270-89e5-af450b6ab744","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/Supplier/inheritance.html":{"path":"Supplier/Inheritance","action-uuid":"af2a58b2-05c3-4eb2-8da1-3b13c302790e","title":"Inheritance","content":"Supertypes Subtypes  "},"references/eClassifiers/End/index.html":{"action-uuid":"a7f5ec64-c5df-408a-baeb-c11da197ec4a","title":"End","content":"End input is used as an output of the containing flow."},"references/eClassifiers/ConsumerFlow/index.html":{"action-uuid":"59306e97-d413-49d4-b936-d3dd047be8c6","title":"Consumer Flow","content":"Consumer flow passes its inputs to a matching Start."},"references/eClassifiers/Consumer/inheritance.html":{"path":"Consumer/Inheritance","action-uuid":"1ebe12a8-08f0-4c08-b87c-8b98b7fc5953","title":"Inheritance","content":"Supertypes Subtypes  "},"references/eClassifiers/Transition/index.html":{"action-uuid":"b3d86f91-075a-403f-9c0d-7a8c244a800d","title":"Transition","content":"Transisitions are functions which take source output as their input. Transition output is passes to its target as input. Only one transition is activated by the source output. Transitions are evauated for activation in the the order defined by the order property. Transitions within the same order are ordered by type specificity, if it is supported. Within the same type (or absense of thereof) transitions with conditions are evaluated before transition(s) without conditions. errors is not applicable to transitions, only to [error transitions)(../ErrorTransition/index.html)."},"references/eClassifiers/FlowElement/index.html":{"action-uuid":"5977e9d0-8d17-4c43-9b67-b3ad46ed0544","title":"Flow Element","content":"Base class for flow elements. Defines errors and implementation attributes. errors has different semantics depending on a sub-class and is not applicable to some sub-classes."},"references/eClassifiers/Transition/references/eStructuralFeatures/output/index.html":{"path":"Transition/Attributes/output","action-uuid":"26a1e7b0-d6aa-4bf0-a0c2-84cdbcdbb3e0","title":"output","content":"Output type"},"references/eClassifiers/SourceErrorTransition/index.html":{"action-uuid":"c3902f28-c96a-4787-a823-b6df7a2c8044","title":"Source Error Transition","content":"Source error transition executes its source code to transform the input error to transition output."},"references/eClassifiers/SourceSupplier/index.html":{"action-uuid":"6212c886-63c2-4f96-ad8a-f76bcf08879d","title":"Source Supplier","content":"Source supplier executes its source code to supply output objects. For example, the source code may create an HTTP listener to supply HTTP request/response pairs (exchanges)."},"references/eClassifiers/FlowElement/inheritance.html":{"path":"Flow Element/Inheritance","action-uuid":"6e8c7ebb-f276-4269-abd0-240968f16345","title":"Inheritance","content":"Supertypes Subtypes  "},"references/eClassifiers/Transition/references/eStructuralFeatures/input/index.html":{"path":"Transition/Attributes/input","action-uuid":"e781cf5f-6f4c-436d-bfc3-4687241207de","title":"input","content":"Output type"},"glossary.html":{"action-uuid":"4802bb15-c59e-4b1e-93bf-e1bb9365fdcb","title":"Glossary","content":"Clear Identifier(s) Hide UUID {{data.value.name}} {{data.value[0].value}} {{item.value}}"},"references/eClassifiers/FunctionFlow/index.html":{"action-uuid":"85af8206-63d7-4ea7-a3d8-869212582b7f","title":"Function Flow","content":"Function flow takes inputs and passes them to a matching Start element. It then collects output from its End element and uses it as flow output."},"references/eClassifiers/Start/references/eStructuralFeatures/output/index.html":{"path":"Start/Attributes/output","action-uuid":"92a69705-2e75-4f89-b993-1d3accf8b200","title":"output","content":"Output type"},"references/eClassifiers/SourceConsumer/index.html":{"action-uuid":"4e398e19-ad2c-4ff1-b36c-efe0daf16481","title":"Source Consumer","content":"Source consumer executes source code to process its inputs."},"references/eClassifiers/Source/inheritance.html":{"path":"Source/Inheritance","action-uuid":"d7e5ea00-cf6c-4f9f-bebf-b1d1200c3f7a","title":"Inheritance","content":"Supertypes Subtypes  "},"references/eClassifiers/ConsumerFlow/inheritance.html":{"path":"Consumer Flow/Inheritance","action-uuid":"a589c29d-1a13-4c7d-80bf-ac50047ef94e","title":"Inheritance","content":"Supertypes Subtypes  "},"references/eClassifiers/Flow/inheritance.html":{"path":"Flow/Inheritance","action-uuid":"6c9a7ed0-b7cc-4dd9-b242-bc4d1f1af4fb","title":"Inheritance","content":"Supertypes Subtypes  "},"references/eClassifiers/ErrorHandler/index.html":{"action-uuid":"d5dcaef7-f62d-45ac-a3af-d26a8efd5668","title":"Error Handler","content":"If a flow element throws an error and there are no matching error transitions, then the error is handled by an error handler with matching errors. Error handlers are sorted in the order of error specificity, if it is supported. Otherwise they are matched with the error in the order they are defined in the model."},"references/eClassifiers/SourceErrorHandler/inheritance.html":{"path":"Source Error Handler/Inheritance","action-uuid":"8d51dc0c-032b-4373-9c09-60074711744d","title":"Inheritance","content":"Supertypes "},"references/eClassifiers/SourceErrorHandler/index.html":{"action-uuid":"6cbf2e2b-cb0f-4da3-97d7-3e2bc968e19d","title":"Source Error Handler","content":"Source error handler executes source code to handle errors not handled by error transitions."},"references/eClassifiers/ErrorTransition/inheritance.html":{"path":"Error Transition/Inheritance","action-uuid":"237e6e14-cb22-4821-a73e-2590a3f5cf9f","title":"Inheritance","content":"Supertypes Subtypes  "},"references/eClassifiers/Supplier/index.html":{"action-uuid":"882916ac-6cda-4f10-ad7e-106d435af1df","title":"Supplier","content":"Suppliers are sources of objects of output type which are passed via transitions to functions and consumers. Examples: HTTP listener File reader"}}